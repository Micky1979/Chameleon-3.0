SRCROOT = $(abspath $(CURDIR)/../../..)
OBJROOT = $(SRCROOT)/obj/i386/modules/$(DIR)
SYMROOT = $(SRCROOT)/sym/i386
DSTROOT = $(SRCROOT)/dst/i386
DOCROOT = $(SRCROOT)/doc
IMGROOT = $(SRCROOT)/sym/cache
IMGSKELROOT = $(SRCROOT)/imgskel
CDBOOT = ${IMGROOT}/usr/standalone/i386/cdboot

ifeq ($(BUILT_IN),yes)
override OBJROOT = $(SRCROOT)/obj/i386/boot2_modules/$(DIR)
override SYMROOT = $(SRCROOT)/obj/i386/
endif

include ${SRCROOT}/Make.rules


ifeq ($(BUILT_IN),yes)

CFLAGS	:= $(RC_CFLAGS) $(OPTIM) $(MORECPP) -g -Wmost -Werror \
		-fno-builtin -DSAIO_INTERNAL_USER -static $(OMIT_FRAME_POINTER_CFLAG) -fno-stack-protector \
		-march=pentium4 -msse2 -msoft-float -nostdinc -include $(SRCROOT)/autoconf.h

CPPFLAGS := $(CPPFLAGS) -static -nostdinc -Wmost -Werror \
	-fno-builtin -fno-stack-protector \
	-march=pentium4 -msse2  -msoft-float \
	-include $(SRCROOT)/autoconf.h

LDFLAGS = -fno-builtin -static -fno-stack-protector $(OMIT_FRAME_POINTER_CFLAG) -DSAIO_INTERNAL_USER \
                -march=pentium4 -msse2  -Wl,-static -nostdlib -g -msoft-float


else

CFLAGS := $(CLFAGS) -nostdinc -Wmost -Werror \
	-fno-builtin -fno-stack-protector \
	-march=pentium4 -msse2 -msoft-float \
	-include $(SRCROOT)/autoconf.h

CPPFLAGS := $(CPPFLAGS) -nostdinc -Wmost -Werror \
	-fno-builtin -fno-stack-protector \
	-march=pentium4 -msse2 -msoft-float \
	-include $(SRCROOT)/autoconf.h

endif


UTILDIR = ../../util
LIBSADIR = ../../libsa
LIBSAIODIR = ../../libsaio
BOOT2DIR = ../../boot2

MODULE_INCLUDES :=  $(foreach x,$(MODULE_DEPENDENCIES),-I$(SRCROOT)/i386/modules/$(x)/include/)


INC = -I$(SRCROOT)/i386/modules/include/ -Iinclude/ -I$(SRCROOT)/i386/libsaio/ -I$(SRCROOT)/i386/libsa/ -I$(SRCROOT)/i386/include/ -I$(SRCROOT)/i386/boot2/ $(MODULE_INCLUDES)
DEFINES := -D__KLIBC__ $(DEFINES)

MODULE_DEPENDENCIES :=  $(wildcard $(foreach x,$(MODULE_DEPENDENCIES),$(SYMROOT)/modules/$(x).dylib)) \
						$(wildcard $(foreach x,$(MODULE_DEPENDENCIES),$(OBJROOT)/../$(x).dylib))

MODULE_DEPENDENCIES_CMD := $(foreach x,$(MODULE_DEPENDENCIES), -weak_library $(x))

INSTALLDIR = $(DSTROOT)/System/Library/Frameworks/System.framework/Versions/B/PrivateHeaders/standalone

MODULE_DEFINITION := $(CONFIG_$(shell echo $(MODULE_NAME) | tr '[:lower:]' '[:upper:]')_MODULE)


ifeq  ($(MODULE_DEFINITION),m)
ifneq ($(BUILT_IN),yes)

# Make this as a *MODULE*
all: $(CONFIG_HEADERS) $(HEADER_VERSION) dylib all-recursive

else
# Module not selected to be compiled as a module
all: $(CONFIG_HEADERS) $(HEADER_VERSION) all-recursive

endif

else

ifeq ($(MODULE_DEFINITION),y)
ifeq ($(BUILT_IN),yes)

# Make this *BUILT IN*
##### DISBLAED FOR linux compile
#all: $(CONFIG_HEADERS) $(HEADER_VERSION) dylib_LINKER all-recursive
all: $(CONFIG_HEADERS) $(HEADER_VERSION) all-recursive

else
# Module not selected to be built in
all: $(CONFIG_HEADERS) $(HEADER_VERSION) all-recursive

endif
else

# Don't compile this module
all:

endif
endif


dylib_LINKER: $(SRCROOT)/sym/i386/boot_modules.c $(SRCROOT)/sym/i386/boot_modules.h dylib 

dylib: ${SYMROOT}/modules/ ${OBJROOT} $(SYMROOT)/modules/$(MODULE_NAME).dylib

MODULE_OBJS := $(addprefix $(OBJROOT)/, ${MODULE_OBJS})

ifeq ($(BUILT_IN),yes)
$(SYMROOT)/modules/$(MODULE_NAME).dylib: $(MODULE_OBJS) $(MODULE_DEPENDENCIES) $(OBJROOT)/$(MODULE_NAME).desc $(OBJROOT)/$(MODULE_NAME).author Makefile
	@echo "	[LD] $(MODULE_NAME).dylib"
	@$(X86_MACH_CC) $(LDFLAGS) -shared $(INC) -o $@ ${filter %.o %.a, $^}

	### TODO: add         -sectcreate __INFO __author $(OBJROOT)/$(MODULE_NAME).author         -sectcreate __INFO __description $(OBJROOT)/$(MODULE_NAME).desc 
else

$(SYMROOT)/modules/$(MODULE_NAME).dylib: $(MODULE_OBJS) $(MODULE_DEPENDENCIES) $(OBJROOT)/$(MODULE_NAME).desc $(OBJROOT)/$(MODULE_NAME).author $(SRCROOT)/sym/i386/boot.elf Makefile
	@echo "	[LD] $(MODULE_NAME).dylib"
	@$(X86_MACH_CC) $(LDFLAGS) -shared $(INC) -o $@ ${filter %.o %.a, $^}

	### TODO: add         -sectcreate __INFO __author $(OBJROOT)/$(MODULE_NAME).author         -sectcreate __INFO __description $(OBJROOT)/$(MODULE_NAME).desc 
endif


clean-local:
	@if [ -f "$(SYMROOT)/modules/$(MODULE_NAME).dylib" ];then \
        echo "	[RM] $(SYMROOT)/modules/$(MODULE_NAME).dylib";\
    fi
	@for o in $(MODULE_OBJS); do if [ -f "$${o}" ];then echo "	[RM] $${o}"; fi; done
	@rm -f $(SYMROOT)/modules/$(MODULE_NAME).dylib
	@rm -rf $(OBJROOT)


${SYMROOT}/modules/:
	@echo "	[MKDIR] $@"
	@$(MKDIRS) $@

.PHONY: $(SRCROOT)/sym/i386/boot_modules.h
.PHONY: $(SRCROOT)/sym/i386/boot_modules.c

$(SRCROOT)/sym/i386/boot_modules.c: 
	@echo "	start_built_in_module(\"$(MODULE_NAME)\", \"$(MODULE_AUTHOR)\", \"$(MODULE_DESCRIPTION)\", 0, 0, &$(MODULE_START));" >> $@

$(SRCROOT)/sym/i386/boot_modules.h:
	@echo "void $(MODULE_START)(); // $(MODULE_NAME)" >> $@

$(OBJROOT)/$(MODULE_NAME).author: Makefile
	@echo "$(MODULE_AUTHOR)" > $@

$(OBJROOT)/$(MODULE_NAME).desc: Makefile
	@echo "$(MODULE_DESCRIPTION)" > $@

#dependencies
-include $(OBJROOT)/Makedep
